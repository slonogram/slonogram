renames:
  Update.update_id: id
  Message.message_id: id

call_groups:
  groups:
    update: [getUpdates, getWebhookInfo, deleteWebhook, setWebhook]
    query: [answerCallbackQuery]
    user: [getMe]
    chat: [sendChatAction, sendMessage]

  dump: [
      # sendMessage
      sendMessage.entities,
      sendMessage.reply_markup,
      getUpdates.allowed_updates
    ]

  renames:
    answerCallbackQuery: answer_callback
    getUpdates: poll
    sendChatAction: send_action

  replace_types:
    sendAction.action: ChatAction
    sendMessage.parse_mode: ParseMode
    sendMessage.entities: MessageEntity

enums:
  overrides:
    MessageEntity.type: EntityType

  types:
    ChatAction:
      [
        typing,
        upload_photo,
        record_video,
        upload_video,
        record_voice,
        upload_voice,
        upload_document,
        choose_sticker,
        find_location,
        record_video_note,
        upload_video_note,
      ]
    EntityType:
      [
        mention,
        hashtag,
        cashtag,
        bot_command,
        url,
        email,
        phone_number,
        bold,
        italic,
        underline,
        strikethrough,
        spoiler,
        code,
        pre,
        text_link,
        text_mention,
        custom_emoji,
      ]

    UpdateType:
      [
        message,
        edited_message,
        channel_post,
        edited_channel_post,
        inline_query,
        chosen_inline_result,
        callback_query,
        shipping_query,
        pre_checkout_query,
        poll,
        poll_answer,
        my_chat_member,
        chat_member,
        chat_join_request,
      ]

    ParseMode:
      markdown_v2: MarkdownV2
      html: HTML
      markdown: Markdown
