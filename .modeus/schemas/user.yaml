data:
  description:
  - This object represents a Telegram user or bot.
  fields:
    id:
      description: Unique identifier for this user or bot. This number may have more
        than 32 significant bits and some programming languages may have difficulty/silent
        defects in interpreting it. But it has at most 52 significant bits, so a 64-bit
        integer or double-precision float type are safe for storing this identifier.
      required: true
      types:
      - Integer
    is_bot:
      description: True, if this user is a bot
      required: true
      types:
      - Boolean
    first_name:
      description: User's or bot's first name
      required: true
      types:
      - String
    last_name:
      description: Optional. User's or bot's last name
      required: false
      types:
      - String
    username:
      description: Optional. User's or bot's username
      required: false
      types:
      - String
    language_code:
      description: Optional. IETF language tag of the user's language
      required: false
      types:
      - String
    is_premium:
      description: Optional. True, if this user is a Telegram Premium user
      required: false
      types:
      - Boolean
    added_to_attachment_menu:
      description: Optional. True, if this user added the bot to the attachment menu
      required: false
      types:
      - Boolean
    can_join_groups:
      description: Optional. True, if the bot can be invited to groups. Returned only
        in getMe.
      required: false
      types:
      - Boolean
    can_read_all_group_messages:
      description: Optional. True, if privacy mode is disabled for the bot. Returned
        only in getMe.
      required: false
      types:
      - Boolean
    supports_inline_queries:
      description: Optional. True, if the bot supports inline queries. Returned only
        in getMe.
      required: false
      types:
      - Boolean
  kind: struct
dirty: false
file_name: user.py
